name: Dependency Updates

on:
  schedule:
    # Run monthly on the 1st at 3 AM UTC
    - cron: '0 3 1 * *'
  workflow_dispatch:

concurrency:
  group: dependency-updates
  cancel-in-progress: true  # Cancel older dependency update runs

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
    
    - name: Update Python dependencies
      run: |
        python -m pip install --upgrade pip pip-tools
        # Generate updated requirements
        if [ -f requirements.in ]; then
          pip-compile --upgrade requirements.in
        else
          # Update existing requirements.txt versions using pip-compile for consistency
          pip install pip-tools
          # Create temporary requirements.in from current requirements.txt (without version pins)
          sed 's/>=[^,]*//g; s/==[^,]*//g; s/<[^,]*//g; s/~=[^,]*//g; s/\s*#.*$//' requirements.txt > requirements.tmp.in
          # Generate updated requirements.txt with latest compatible versions
          pip-compile --upgrade requirements.tmp.in --output-file requirements-updated.txt
          # Only replace if compilation succeeded and file is not empty
          if [ -s requirements-updated.txt ]; then
            mv requirements-updated.txt requirements.txt
          fi
          rm -f requirements.tmp.in requirements-updated.txt
        fi
    
    - name: Update Ruby dependencies
      run: |
        bundle update
    
    - name: Run tests with updated dependencies
      run: |
        pip install -r requirements.txt
      continue-on-error: true
    
    - name: Test Python modules with updated dependencies
      working-directory: python
      run: |
        python -m unittest discover -s . -p "test_*.py" -v
      continue-on-error: true
    
    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet; then
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi
    
    - name: Create Pull Request
      if: steps.changes.outputs.has_changes == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'Automated Dependency Updates'
        body: |
          ## Automated Dependency Updates
          
          This PR contains automated dependency updates:
          
          ### Changes
          - Updated Python dependencies in `requirements.txt`
          - Updated Ruby dependencies via `bundle update`
          
          ### Testing
          - [x] Unit tests passed with updated dependencies
          - [ ] Manual testing may be required
          
          Please review the changes and test thoroughly before merging.
          
          Generated by GitHub Actions workflow.
        branch: dependency-updates
        branch-suffix: timestamp
        delete-branch: true